// <auto-generated />
using System;
using FoodInfo.Service.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FoodInfo.Service.Migrations
{
    [DbContext(typeof(FoodInfoServiceContext))]
    [Migration("20181116231042_productContent")]
    partial class productContent
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FoodInfo.Service.Models.Language", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode");

                    b.Property<string>("CountryName");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int?>("CreatedUserId");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<int?>("ModifiedUserId");

                    b.HasKey("ID");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("FoodInfo.Service.Models.NutritionFacts", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Carbohydrate");

                    b.Property<decimal>("Energy");

                    b.Property<decimal>("Fat");

                    b.Property<decimal>("Fiber");

                    b.Property<decimal>("Protein");

                    b.Property<decimal>("Salt");

                    b.Property<decimal>("SaturatedFattyAcids");

                    b.Property<decimal>("TransFattyAcids");

                    b.HasKey("ID");

                    b.ToTable("NutritionFacts");
                });

            modelBuilder.Entity("FoodInfo.Service.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BarkodId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int?>("CreatedUserId");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<int?>("ModifiedUserId");

                    b.Property<int?>("ProductCategoryID");

                    b.Property<int>("ProductGroupId");

                    b.Property<string>("ProductName");

                    b.Property<string>("ProductPicturePath");

                    b.HasKey("ID");

                    b.HasIndex("ProductCategoryID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("FoodInfo.Service.Models.ProductCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int?>("CreatedUserId");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<int?>("ModifiedUserId");

                    b.HasKey("ID");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("FoodInfo.Service.Models.ProductContent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CookingTips");

                    b.Property<string>("Ingredients");

                    b.Property<int?>("NutritionFactID");

                    b.Property<int?>("ProductID");

                    b.Property<string>("Recommendations");

                    b.Property<string>("VideoURL");

                    b.Property<string>("Warnings");

                    b.HasKey("ID");

                    b.HasIndex("NutritionFactID");

                    b.HasIndex("ProductID");

                    b.ToTable("ProductContents");
                });

            modelBuilder.Entity("FoodInfo.Service.Models.ProductLanguage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int?>("CreatedUserId");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("LanguageID");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<int?>("ModifiedUserId");

                    b.Property<int?>("ProductID");

                    b.HasKey("ID");

                    b.HasIndex("LanguageID");

                    b.HasIndex("ProductID");

                    b.ToTable("ProductLanguages");
                });

            modelBuilder.Entity("FoodInfo.Service.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int?>("CreatedUserId");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<bool>("IsAdmin");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsModerator");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<int?>("ModifiedUserId");

                    b.Property<string>("Name");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Surname");

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("User");

                    b.HasData(
                        new { ID = 1, CreatedDate = new DateTime(2018, 11, 17, 0, 10, 42, 159, DateTimeKind.Local), Email = "f@gmail.com", IsAdmin = false, IsDeleted = false, IsModerator = false, Name = "Fatih", Password = "123", Surname = "Cankurtaran", Username = "fatih" },
                        new { ID = 2, CreatedDate = new DateTime(2018, 11, 17, 0, 10, 42, 161, DateTimeKind.Local), Email = "y@gmail.com", IsAdmin = false, IsDeleted = false, IsModerator = false, Name = "Yusuf", Password = "123", Surname = "Kocadas", Username = "yusuf" }
                    );
                });

            modelBuilder.Entity("FoodInfo.Service.Models.Product", b =>
                {
                    b.HasOne("FoodInfo.Service.Models.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryID");
                });

            modelBuilder.Entity("FoodInfo.Service.Models.ProductContent", b =>
                {
                    b.HasOne("FoodInfo.Service.Models.NutritionFacts", "NutritionFact")
                        .WithMany("ProductContent")
                        .HasForeignKey("NutritionFactID");

                    b.HasOne("FoodInfo.Service.Models.Product", "Product")
                        .WithMany("ProductContents")
                        .HasForeignKey("ProductID");
                });

            modelBuilder.Entity("FoodInfo.Service.Models.ProductLanguage", b =>
                {
                    b.HasOne("FoodInfo.Service.Models.Language", "Language")
                        .WithMany("ProductLanguages")
                        .HasForeignKey("LanguageID");

                    b.HasOne("FoodInfo.Service.Models.Product", "Product")
                        .WithMany("ProductLanguages")
                        .HasForeignKey("ProductID");
                });
#pragma warning restore 612, 618
        }
    }
}
